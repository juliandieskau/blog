h1 {
  text-align: center;
} 

.marker {
  /* Since the marker has no content, it's height is automatically set to 0 */
  height: 25px;
  width: 200px;
  /* Use the margin shorthand property to quickly set all the margin properties at the same time */
  /* When the shorthand margin property has two values, it sets margin-top and margin-bottom to the first value, 
      and margin-left and margin-right to the second value */
  margin: 10px auto;
}

.container {
  /* CSS has functions, like rgb(red, green, blue) with numbers through 0-255 */
  background-color: rgb(255, 255, 255);
  /* Use the shorthand padding to add vertical space between the markers and the container that they're in */
  padding: 10px 0;
}

.cap {
  width: 60px;
  height: 25px;
}

.sleeve {
  width: 110px;
  height: 25px;
  /* Set with alpha channel instead of opacity: background-color: rgba(255,255,255,0.5); */
  background-color: white;
  /* non-transparentness: 1.0=opaque, 0.0=transparent */
  opacity: 0.5;
  /* To make the border visible of any element, set its width and style */
  /* Standard border color is black, but set it for readability: */  
    /* border-left-width: 10px;*/
    /* border-left-style: solid; */
    /*border-left-color: black; */
  /* Use the shorthand border property to set all three properties at once: */
  border-left: 10px double rgba(0, 0, 0, 0.75);
}

/* Default display property for div is 'block', so it takes up the entire width and pushes the one after outside of the visible area */
.cap, .sleeve {
  display: inline-block;
}

.red {
  /* rgb is additive, so all 0 is pure black and all 255 is white */
  /* combine two primary color for a secondary color red+green=yellow, green+blue=cyan, blue+red=magenta */
  /* combine a primary color with a nearby secondary color by having 255 of one and 127 of the other color: red+half green=orange */
  /* if two complementary colors are combined, they produce gray */
  /* using two complementary colors next to each other can be distracting, if overused -> chose one dominant color and use the complementary for certain highlights */
  /*background-color: rgb(255, 0, 0);*/

  /* Use a gradient, where one color transitions into another: linear-gradient(gradientDirection, color1, color2, ...); */
  /* Color-stops allow you to fine-tune where colors are placed along the gradient line. 
      They are a length unit like px or percentages that follow a color in the linear-gradient function. */
  background: linear-gradient(180deg, rgb(122, 74, 14) 0%, rgb(245, 62, 113) 50%, rgb(162, 27, 27) 100%);

  /* Positive offset values from the top left, negative towards it */
  /* Size of shadow dependent on size of element applied to 
      Enlarge by optional spreadRadius 
      Make blurry and not sharp with optional blurRadius */
  box-shadow: 0 0 20px 0 rgba(83, 14, 14, 0.8);
}

.green {
  /* The color keyword 'green' is a much darker shade than 255 green (127) */
  /* Use the # to use hex codes as colors */
  /* Color stops are automatically set to 0%, 50%, 100% so using them explicitly is redundant if not changing the values */
  /* gradient direction is automatically set to 180degrees -> redundant */
  background: linear-gradient(#55680D, #71F53E, #004000);
  box-shadow: 0 0 20px 0 #3B7E20CC;
}

.blue {
  /* Use hue saturation and lightness to chose a color */
  /* hsl(0-360, 0%-100%, 0%-100%) */
  /* h: red=0, green=120, blue=240 */
  /* s: 0% is gray, 100% is pure color */
  /* l: 0% is complete black, 50% neutral, 100% complete white */
  background: linear-gradient(hsl(186, 76%, 16%), hsl(223, 90%, 60%), hsl(240, 56%, 42%));
  box-shadow: 0 0 20px 0 hsla(223, 59%, 31%, 0.8);
}